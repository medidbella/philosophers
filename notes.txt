int main(int argc, char **argv) 
{
 	struct timeval start;	/* starting time */
 	struct timeval end;	/* ending time */
	unsigned long e_usec;	/* elapsed microseconds */

 	gettimeofday(&start, 0);	/* mark the start time */
	sleep(2);		/* sleep for 2 seconds */
 	gettimeofday(&end, 0);		/* mark the end time */

 	/* now we can do the math. timeval has two elements: seconds and microseconds */
 	e_usec = ((end.tv_sec * 1000000) + end.tv_usec) - ((start.tv_sec * 1000000) + start.tv_usec);

 	printf("elapsed time: %lu microseconds\n", e_usec);
 	exit(0);
}

#include <unistd.h>
#include <stdlib.h>
#include <stdio.h>
#include <pthread.h>

int counter;
pthread_mutex_t mutex;
void thread_fn1()
{
	int i = 0;
	while (i++ < 100000)
	{
		pthread_mutex_lock(&mutex);
		counter++;
		pthread_mutex_unlock(&mutex);
	}
}


int main(void)
{
	pthread_t thread1;
	pthread_t thread2;
	pthread_mutex_init(&mutex, NULL);
	pthread_create(&thread1, NULL, (void *(*)(void *))thread_fn1, NULL);
	pthread_create(&thread2, NULL, (void *(*)(void *))thread_fn1, NULL);
	pthread_join(thread1, NULL);
	pthread_join(thread2, NULL);
	pthread_mutex_destroy(&mutex);
	printf("counter = %d\n", counter);
	return (0);
}